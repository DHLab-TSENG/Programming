---
title: "2. Python 101"
author: "Yi-Ju Tseng"
format:
  revealjs:
    slide-number: c/t
    show-slide-number: all
editor: visual
---

## 重點複習: 計算機概論

-   **Variables, Expressions, and Statements**
-   **Conditional Execution**
-   **Functions**
-   **Iterations**

# Variables

## Variable 變數設定

-   使用 `=` 設定變數
-   **變數名稱** `=` **變數內容(值, Constants, 常數)**

![](https://miro.medium.com/v2/resize:fit:524/format:webp/0*16wn36oYFyUAsFOA.gif)

```{python}
#| echo: true
var1 = "test"
var2, var3 = "test2","test3"
print(var1)
print(var2)
print(var3)
print(var2+var3)
```

[Source](https://wakeupcoders.medium.com/the-beginners-guide-to-python-variables-896ee1a95cc7)

## Variable 變數命名規則

-   不可使用保留字
    -   會變色的基本上都是保留字，如`True`, `False`等，在Python有功能的字串
-   只能由**數字**`0-9`、**字母**`A-Z` `a-z`，或是**底線**組成`_`，且不可以數字開頭
-   大小寫敏感
-   建議要是看得懂的字

```{python}
#| echo: true
True
False
```

## Data Types 資料型態

-   **文字 (text, string, character)**
-   **數值 (numeric)**
-   **布林變數 (Boolean, logic)**
-   **日期 (date)**

## 文字 (text, string, character)

-   一般文字，使用`單引號`或`雙引號`標註，或是使用`str(文字內容)`宣告
-   就算內容為數字，只要使用雙引號標注，或是`str`宣告，即為文字型態（除非有做轉型）

```{python}
#| echo: true
text1 = "abcd"
text2 = "10"
text3 = str("xyz")
text4 = str(100)
print([text1, text2, text3,text4])
```

## 數值 (numeric)

包含**整數 int**與浮點數 float等型態。

**整數 int**：正數或負數，無小數點

-   直接指定，或是使用`int(數值)`宣告整數
-   若`數值`非整數，則**無條件捨去**
-   若`數值`是文字型態，則強迫轉型

```{python}
#| echo: true
int1 = 10
int2 = int(5)
int3 = int(6.7)
int4 = int(6.3)
int5 = int("88")
print([int1, int2, int3, int4, int5])
```

## 數值 (numeric)

包含整數 int與**浮點數 float**等型態。

**浮點數 float**：正數或負數，有小數點的數值

-   直接指定，或是使用`float(數值)`宣告整數
-   若`數值`為整數，則**自動增加小數點**
-   若`數值`是文字型態，則強迫轉型

```{python}
#| echo: true
float1 = float(10)
float2 = float(6.7)
float3 = float("88.8")
print([float1, float2, float3])
```

## 布林變數 (Boolean, logic)

`True` or `False`

::: columns
::: column
```{python}
#| echo: true
a = 1 > 2
print(a)
```
:::

::: column
```{python}
#| echo: true
b = 1 < 2
print(b)
```
:::
:::

## 日期 (date)

Python中並無內建的日期型態，必須使用`datetime`套件，使用前要記得載入（import）

```{python}
#| echo: true
#| eval: false
!pip3 install datetime
```

```{python}
#| echo: true
import datetime
```

## 日期 (date)

當需要用載入套件的功能時，結構為：`套件名稱`.`套件功能或資料類型`（可能有多層）

如`datetime`.`datetime.now()`：

-   第一個datetime為套件名稱
-   第二個為套件內資料類型，有`date`, `time`, `datetime`等，可查閱[文件](https://docs.python.org/zh-tw/3/library/datetime.html#available-types)
-   `.now()`為更進一步的功能（取得今日的**日期物件**）

```{python}
#| echo: true
today = datetime.datetime.now()
print(today)
```

## 日期 (date)

取得日期後，**日期物件**有許多內建的功能

-   如`.year`，`.month`等
-   可查閱[文件](https://docs.python.org/zh-tw/3/library/datetime.html#available-types)

```{python}
#| echo: true
print(today)
```

```{python}
#| echo: true
print(today.year)
```

```{python}
#| echo: true
print(today.month)
```

## 日期 (date)

也可直接新增指定日期物件，使用方法為：

-   `datetime.date(年,月,日)`
-   `datetime.datetime(年,月,日,時,分,秒)`
-   時分秒不指定會直接使用預設值

```{python}
#| echo: true
newdate = datetime.date(2024,1,23)
print(newdate)
```

```{python}
#| echo: true
newdatetime = datetime.datetime(2024,1,23,23,23,23)
print(newdatetime)
```

```{python}
#| echo: true
newdatetime = datetime.datetime(2024,1,23)
print(newdatetime)
```

## Data Types 資料型態 - Recap

-   **文字 (text, string, character)**
-   **數值 (numeric)**
-   **布林變數 (Boolean, logic)**
-   **日期 (date)**



# Conditional Execution

## Operator 運算子

-   `+`加 / `-`減 / `*`乘 / `/`除
-   `>`大於 / `<`小於 / `==`等於 / `!=`不等於
-   `and`且 / `or`或

## +加 / -減 / \*乘 / /除

```{python}
#| echo: true
int1 = 10
int2 = int(5)
print([int1, int2])
```

::: columns
::: column
`+`加

```{python}
#| echo: true
int1 + int2
```

`-`減

```{python}
#| echo: true
int1 - int2
```
:::

::: column
`*`乘

```{python}
#| echo: true
int1 * int2
```

`/`除

```{python}
#| echo: true
int1 / int2
```
:::
:::

## \>大於 / \<小於 / ==等於 / !=不等於

```{python}
#| echo: true
int1 = 10
int2 = int(5)
print([int1, int2])
```

::: columns
::: column
`>`大於

```{python}
#| echo: true
int1 > int2
```

`<`小於

```{python}
#| echo: true
int1 < int2
```
:::

::: column
`==` 等於

```{python}
#| echo: true
int1 == int2
```

`!=`不等於

```{python}
#| echo: true
int1 != int2
```
:::
:::

## and / or

::: columns
::: column
`and`且

```{python}
#| echo: true
10>5 and 10>1
```

```{python}
#| echo: true
10>5 and 1>5
```
:::

::: column
`or`或

```{python}
#| echo: true
10>5 or 10>1
```

```{python}
#| echo: true
10>5 or 1>5
```
:::
:::

## Hands-on

-   宣告一個**文字** "15"
-   宣告一個**數字** 10
-   試著相加看看？是否能相加？錯誤訊息的意思是什麼？

## if else


## try except

# Function 

## Function 函數使用
`函數名稱`(`參數`)，如`print`(`變數或字串`)

```{python}
#| echo: true
var1 = "test"
print(var1)
```

`函數名稱`(`參數1`,`參數2`,...)，多個參數用`,`分隔

## Function 設計函數

# Iteration

## for loop

## while

## Function 函數使用


